{
	"name": "df_transform_cases_deaths",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_caseanddeaths",
						"type": "DatasetReference"
					},
					"name": "casesAndDeathSource"
				},
				{
					"dataset": {
						"referenceName": "ds_country_lookup",
						"type": "DatasetReference"
					},
					"name": "countrylookup"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "filteronlyeurope"
				},
				{
					"name": "selectReqColumns"
				},
				{
					"name": "PivotCounts"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          country_code as string,",
				"          continent as string,",
				"          population as integer,",
				"          indicator as string,",
				"          daily_count as short,",
				"          date as date,",
				"          rate_14_day as double,",
				"          source as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     maxColumns: 300000) ~> casesAndDeathSource",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> countrylookup",
				"casesAndDeathSource filter(continent == 'Europe' && not(isNull(country_code))) ~> filteronlyeurope",
				"filteronlyeurope select(mapColumn(",
				"          country,",
				"          country_code,",
				"          population,",
				"          indicator,",
				"          daily_count,",
				"          source,",
				"          each(match(name=='date'),",
				"               'reported' + '_date' = $$)",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> selectReqColumns",
				"selectReqColumns pivot(groupBy(country,",
				"          country_code,",
				"          population,",
				"          source,",
				"          reported_date,",
				"          {} = ERROR_FUNCTION('')),",
				"     pivotBy(indicator),",
				"     count = sum(daily_count),",
				"     columnNaming: '$N_$V',",
				"     lateral: true) ~> PivotCounts"
			]
		}
	}
}