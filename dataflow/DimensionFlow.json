{
	"name": "DimensionFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "CustomerStream"
				},
				{
					"name": "StoreStream"
				},
				{
					"name": "ProductStream"
				},
				{
					"name": "ProductModelStream"
				},
				{
					"name": "ProductSubStream"
				}
			],
			"sinks": [
				{
					"name": "DimCustomerSynapse"
				},
				{
					"name": "DimProduct"
				}
			],
			"transformations": [
				{
					"name": "CustomerjoinStore"
				},
				{
					"name": "selectColumns"
				},
				{
					"name": "RemoveNulls"
				},
				{
					"name": "ProdJProdmodel"
				},
				{
					"name": "ProdJoinSubcat"
				},
				{
					"name": "selectColumnsProductdim"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          PersonID as integer,",
				"          StoreID as integer,",
				"          TerritoryID as integer,",
				"          AccountNumber as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> CustomerStream",
				"source(output(",
				"          BusinessEntityID as integer,",
				"          Name as string,",
				"          SalesPersonID as integer,",
				"          Demographics as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> StoreStream",
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          MakeFlag as boolean,",
				"          FinishedGoodsFlag as boolean,",
				"          Color as string,",
				"          SafetyStockLevel as integer,",
				"          ReorderPoint as integer,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          SizeUnitMeasureCode as string,",
				"          WeightUnitMeasureCode as string,",
				"          Weight as decimal(8,2),",
				"          DaysToManufacture as integer,",
				"          ProductLine as string,",
				"          Class as string,",
				"          Style as string,",
				"          ProductSubcategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> ProductStream",
				"source(output(",
				"          ProductModelID as integer,",
				"          Name as string,",
				"          CatalogDescription as string,",
				"          Instructions as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> ProductModelStream",
				"source(output(",
				"          ProductSubcategoryID as integer,",
				"          ProductCategoryID as integer,",
				"          Name as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> ProductSubStream",
				"CustomerStream, StoreStream join(StoreID == BusinessEntityID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> CustomerjoinStore",
				"CustomerjoinStore select(mapColumn(",
				"          CustomerID,",
				"          StoreID,",
				"          BusinessEntityID,",
				"          StoreName = Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectColumns",
				"selectColumns alterRow(deleteIf(isNull(BusinessEntityID)),",
				"     deleteIf(isNull(StoreName))) ~> RemoveNulls",
				"ProductStream, ProductModelStream join(ProductStream@ProductModelID == ProductModelStream@ProductModelID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> ProdJProdmodel",
				"ProdJProdmodel, ProductSubStream join(ProductStream@ProductSubcategoryID == ProductSubStream@ProductSubcategoryID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> ProdJoinSubcat",
				"ProdJoinSubcat select(mapColumn(",
				"          ProductID,",
				"          ProductModelID = ProductStream@ProductModelID,",
				"          ProductSubcategoryID = ProductStream@ProductSubcategoryID,",
				"          ProductName = ProductStream@Name,",
				"          SafetyStockLevel,",
				"          ProductModelName = ProductModelStream@Name,",
				"          ProductSubCategoryName = ProductSubStream@Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectColumnsProductdim",
				"selectColumnsProductdim alterRow(deleteIf(isNull(ProductModelID)),",
				"     deleteIf(isNull(ProductSubcategoryID))) ~> alterRow1",
				"RemoveNulls sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     format: 'table') ~> DimCustomerSynapse",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     format: 'table') ~> DimProduct"
			]
		}
	}
}